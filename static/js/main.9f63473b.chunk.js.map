{"version":3,"sources":["containers/modals/SearchModal/SearchModal.module.css","components/flightdata/FlightData.module.css","components/flightdata/flightbox/FlightBox.module.css","components/flightdata/flightbox/FlightBox.js","containers/modals/SearchModal/SearchModal.js","components/flightdata/FlightData.js","components/nivo/respbubble/MyResponsiveBubble.js","hoc/Aux.js","components/titlebar/TitleBar.js","containers/maindisplay/MainDisplay.js","app.js","index.js"],"names":["module","exports","flightBox","props","Card","className","classes","CardHeader","Header","CardTitle","playerName","Row","Col","CardSubtitle","CardSubTitle","join","playerData","HangRightTitle","CardBody","VertCenter","toFixed","PlayerSearchModal","handleChange","e","value","target","setState","searchTerm","searchThings","a","result","state","search","console","log","resultList","renderList","handleResults","playerSelect","id","test","valueOf","Object","keys","activeElement","length","classList","remove","activePlayer","response","flag","temp","Array","isArray","push","ModalResultsList","map","key","entry","onClick","SearchResultsItem","isEmpty","obj","makePlayerArea","pname","pdict","FlightBox","searchList","JsSearch","addIndex","addDocuments","toggle","this","Modal","isOpen","ModalHeader","ModalBody","ModalSearchBody","Form","FormGroup","Label","for","Input","type","autoComplete","name","onKeyUp","placeholder","ModalFooter","Component","makeFlightData","PlayerData","dataDump","myResponsiveBubbleHtml","d","data","root","margin","top","right","bottom","left","identity","colors","scheme","chartCircleColors","colorBy","chartCircleColorBy","padding","labelTextColor","from","modifiers","borderWidth","borderColor","defs","background","color","rotation","lineWidth","spacing","fill","chartCircleLines","match","depth","animate","motionStiffness","motionDamping","aux","children","pageTitleBar","Aux","UncontrolledButtonDropdown","DropdownToggle","caret","size","dataSet","DropdownMenu","DropdownItem","header","disabled","to","pathname","divider","colorSchemes","data_sources","Alpha_Dump","Papa_Dump","Sierra_Dump","path_names","MainDisplay","searchModal","playerDump","fuelDataJSON","mainDataChart","chartMotionDamp","nivoFuel","modal","digest","PlayerScores","formatted","forEach","giveBlueBaseStrength","baseDict","formatedBaseList","unitList","unorderedUnitList","amt","baseStrengthHandler","gph","giveBaseFuel","replacement","bFuel","amount","charCircleColors","baseFuelHandler","orderByKills","sort","b","orderByKDR","orderByDeaths","orderByTime","set","location","dump","TitleBar","md","Container","MyResponsiveBubble","class","FlightData","onSave","handleSubmit","withRouter","app","path","render","exact","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f63473b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalSearchBody\":\"SearchModal_ModalSearchBody__1s4Rl\",\"ModalResultsList\":\"SearchModal_ModalResultsList__18mlF\",\"SearchResultsItem\":\"SearchModal_SearchResultsItem__1EMPo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PlayerData\":\"FlightData_PlayerData__FHyzD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"FlightBox_Header__2HRal\",\"HangRightTitle\":\"FlightBox_HangRightTitle__12Epn\",\"VertCenter\":\"FlightBox_VertCenter__202bs\",\"Card\":\"FlightBox_Card__1-miE\",\"CardSubTitle\":\"FlightBox_CardSubTitle__3UaQd\"};","import {\n    Card,\n    CardBody,\n    CardTitle,\n    CardSubtitle,\n    CardHeader,\n    Col,\n    Row,\n} from \"reactstrap\";\n\nimport {\n    Building,\n    Bullseye,\n    Eject,\n    EmojiDizzy,\n    LifePreserver,\n    Basket,\n    Percent,\n    PersonPlus,\n    Truck,\n    Trophy,\n    Alarm\n} from 'react-bootstrap-icons'\n\nimport classes from './FlightBox.module.css';\n\nconst flightBox = (props) => {\n    return (\n        <Card className={classes.Card}>\n            <CardHeader className={classes.Header}>\n                <CardTitle><strong>{props.playerName}</strong></CardTitle>\n                <Row>\n                    <Col><CardSubtitle className={[classes.CardSubTitle, \"mb-2\", \"text-muted\"].join(\" \")}><Alarm /> Flight Time: {props.playerData[\"SeatTime\"]}<span></span></CardSubtitle></Col>\n                    <Col><CardSubtitle className={classes.HangRightTitle}><Trophy /> Score: {props.playerData[\"Score\"]}</CardSubtitle></Col>\n                </Row>\n            </CardHeader>\n            <CardBody>\n                    <Row className=\"row-cols-3\">\n                        <Col>\n                            <span className={classes.VertCenter}><Bullseye /> Air: {props.playerData[\"Air Kills\"]}</span>\n                        </Col>\n                        <Col>\n                            <span className={classes.VertCenter}><EmojiDizzy /> Deaths: {props.playerData[\"Deaths\"]}</span>\n                        </Col>\n                        <Col>\n                            <span className={classes.VertCenter}><Percent /> K/D: {props.playerData[\"KtoDr\"].toFixed(2)}</span>\n                        </Col>\n                        <Col>\n                            <span className={classes.VertCenter}><Truck /> Unit Kills: {props.playerData[\"Unit Kills\"]}</span>\n                        </Col>\n                        <Col>\n                            <span className={classes.VertCenter}><Building /> Buldings: {props.playerData[\"Building Kills\"]}</span>\n                        </Col>\n                        <Col>  \n                            <span className={classes.VertCenter}><Eject /> Ejections: {props.playerData[\"Ejections\"]}</span>\n                        </Col>\n                        <Col>  \n                            <span className={classes.VertCenter}><LifePreserver /> Ship Kills: {props.playerData[\"Ship Kills\"]}</span>\n                        </Col>\n                        <Col>  \n                            <span className={classes.VertCenter}><Basket /> Crates Loaded: {props.playerData[\"CratesLoaded\"]}</span>\n                        </Col>\n                        <Col>  \n                            <span className={classes.VertCenter}><PersonPlus /> Troops: {props.playerData[\"Troops\"]}</span>\n                        </Col>\n                    </Row>\n            </CardBody>\n        </Card>\n    )\n}\n\nexport default flightBox","import React, { Component } from \"react\";\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\n\nimport FlightBox from '../../../components/flightdata/flightbox/FlightBox'\n\nimport classes from './SearchModal.module.css';\n\nimport * as JsSearch from 'js-search';\n\nexport default class PlayerSearchModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        searchList: this.props.searchList,\n        searchTerm: \"\",\n        resultList: [],\n        renderList: [],\n        search: new JsSearch.Search('name'),\n        activePlayer: {},\n        activeElement: {},\n        };\n        this.state.search.addIndex(\"name\")\n        this.state.search.addDocuments(this.state.searchList)\n    }\n\n    handleChange = (e) => {\n        let { value } = e.target;\n        this.setState({searchTerm: value});\n        this.searchThings(value)\n    };\n\n    searchThings = (a) => {\n        let result = this.state.search.search(a)\n        console.log(result);\n        this.setState({resultList: result, renderList: this.handleResults(result)})\n    }\n\n    playerSelect = (e) => {\n        console.log(e.target.id)\n        let test = e.target.id.valueOf()\n        e.target.className = (\"selected \" + e.target.className );\n        if (Object.keys(this.state.activeElement).length > 0) {\n            this.state.activeElement.classList.remove(\"selected\");\n        }\n        this.setState({activePlayer: this.state.resultList[test], activeElement: e.target})\n    }\n\n    handleResults = (response) => {\n        let flag = typeof(response)\n        let temp = [];\n        if (flag === \"object\"){\n            if (Array.isArray(flag)){\n                console.log(\"ARRAY???\")\n            } else {\n                console.log(\"dict\")\n                temp.push(\n                    <div className={classes.ModalResultsList}>\n                        {\n                            Object.keys(response).map((key, entry) => {\n                                return (\n                                    <p id={\"\" + key} onClick={(e) => this.playerSelect(e)} className={classes.SearchResultsItem}>{response[entry][\"name\"]}</p>\n                                )\n                            })\n                        }\n                    </div>\n                )\n            }\n        }\n        return temp\n    }\n\n    isEmpty = (obj) => {\n        if (typeof obj === \"undefined\"){\n            return true\n        }\n        return Object.keys(obj).length === 0;\n    }\n\n    makePlayerArea = () => {\n        if (!this.isEmpty(this.state.activePlayer)){\n            let pname = this.state.activePlayer[\"name\"]\n            let pdict = this.state.activePlayer\n            return (\n                <FlightBox\n                    playerName={pname}\n                    playerData={pdict}\n                    />\n            )\n        }\n    }\n\n    render() {\n        const { toggle } = this.props;\n        return (\n        <Modal isOpen={true} toggle={toggle}>\n            <ModalHeader toggle={toggle}> Player Search </ModalHeader>\n            <ModalBody className={classes.ModalSearchBody}>\n                <Form>\n                    <FormGroup>\n                        <Label for=\"search-bar\">Search: </Label>\n                        <Input\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            name=\"search-bar\"\n                            onKeyUp={this.handleChange}\n                            placeholder=\"Enter Player Name\"\n                        />\n                    </FormGroup>\n                </Form>\n            <div>{this.state.renderList}</div>\n            </ModalBody>\n            <ModalFooter>\n                {this.makePlayerArea()}\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}","import FlightBox from './flightbox/FlightBox';\nimport classes from './FlightData.module.css';\n\nconst makeFlightData = (props) => {\n    let pname = \"\"\n    let pdict = {}\n    return (\n        <div className={[classes.PlayerData, \"scroll-test\"].join(\" \")}>\n            {props.dataDump.map((entry) => {\n                if (entry[\"f_time_s\"] > 7000) {\n                pname = entry[\"name\"];\n                pdict = entry;\n                return (\n                    <FlightBox\n                        key={pname}\n                        playerName={pname}\n                        playerData={pdict}\n                        />\n                    )\n                }\n                return null \n            })}\n        </div>\n    )\n}\n\nexport default makeFlightData;","import { ResponsiveBubble } from '@nivo/circle-packing';\n\nconst myResponsiveBubbleHtml = (props) => {\n    const d = props.data\n    return (\n        <ResponsiveBubble\n            root={d}\n            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n            identity=\"name\"\n            value=\"amt\"\n            colors={{ scheme: props.chartCircleColors }}\n            colorBy={props.chartCircleColorBy}\n            padding={6}\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1 ] ] }}\n            borderWidth={2}\n            borderColor={{ from: 'color' }}\n            defs={[\n                {\n                    id: 'lines',\n                    type: 'patternDots',\n                    background: 'none',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 5,\n                    spacing: 8\n                }\n            ]}\n            fill={ props.chartCircleLines ? [ { match: { depth: 1 }, id: 'lines' } ] : []}\n            animate={true}\n            motionStiffness={80}\n            motionDamping={12}\n        />\n    )\n}\n\nexport default myResponsiveBubbleHtml;","const aux = (props) => ( props.children )\n\nexport default aux;","import {\n    DropdownMenu,\n    DropdownItem,\n    DropdownToggle,\n    UncontrolledButtonDropdown\n} from \"reactstrap\";\nimport { Link } from 'react-router-dom';\n\nimport Aux from '../../hoc/Aux';\n\nconst pageTitleBar = (props) => {\n    return (\n        <Aux>\n            <div className=\"title site-title\">\n                <h1>[XSAF] Camelot Dynamic Campaign</h1>\n            </div>\n            <div className=\"title site-title\">\n                <UncontrolledButtonDropdown>\n                    <DropdownToggle caret size=\"lg\">\n                        <strong>Server: {props.dataSet}</strong>\n                    </DropdownToggle>\n                    <DropdownMenu>\n                        <DropdownItem header>Choose Server...</DropdownItem>\n                        <DropdownItem disabled>\n                            <Link to={{pathname: \"/papa\"}}>Papa</Link>\n                        </DropdownItem>\n                        <DropdownItem >\n                            <Link to={{pathname: \"/sierra\"}}>Sierra</Link>\n                        </DropdownItem>\n                        <DropdownItem divider />\n                        <DropdownItem >\n                            <Link to={{pathname: \"/alpha\"}}>Alpha</Link>\n                        </DropdownItem>\n                    </DropdownMenu>\n                </UncontrolledButtonDropdown>\n            </div>\n        </Aux>\n    )\n}\n\nexport default pageTitleBar;","import { Component } from 'react';\nimport {\n    Col,\n    Container,\n    Row,\n} from \"reactstrap\";\nimport PlayerSearchModal from \"../modals/SearchModal/SearchModal\";\nimport Papa_Dump from '../../data/Papa_Export.json';\nimport Sierra_Dump from '../../data/Sierra_Export.json';\nimport Alpha_Dump from '../../data/Alpha_Export.json';\n\nimport FlightData from '../../components/flightdata/FlightData';\nimport MyResponsiveBubble from '../../components/nivo/respbubble/MyResponsiveBubble';\nimport TitleBar from '../../components/titlebar/TitleBar';\nimport { withRouter } from 'react-router';\n\n// Color schemes for graph\nconst colorSchemes = {\n    \"blue\": \"blues\",\n    \"red\": \"reds\",\n    \"fuel\": \"blues\"\n}\n\nconst data_sources = {\n    \"Alpha\": Alpha_Dump,\n    \"Papa\": Papa_Dump,\n    \"Sierra\": Sierra_Dump\n}\n\nconst path_names = {\n    \"/alpha\": \"Alpha\",\n    \"/sierra\": \"Sierra\",\n    \"/papa\": \"Papa\",\n    \"/\": \"Sierra\"\n}\n\nclass MainDisplay extends Component {\n    state = {\n        searchModal: false,\n        playerDump: {},\n        dataSet: \"Sierra\",\n        dataDump: [], //players\n        fuelDataJSON: {},\n        mainDataChart: {\n            name: \"xsaf\", \n            children: []\n        },\n        chartCircleColorBy: \"depth\", //depth or name\n        chartCircleLines: true,\n        chartCircleColors: colorSchemes[\"blue\"],\n        chartMotionDamp: 2,\n        nivoFuel: {\n            \"name\": \"xsaf\",\n            \"children\": \n                [ \n                    /* Populate dynamic with data */\n                ]\n            }\n    }\n\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    }\n\n    component\n\n    componentDidMount() {\n        console.log(\"DidMount Called\")\n        const set = path_names[this.props.location.pathname]\n        const dump = this.digest(set);\n        const gph = this.giveBlueBaseStrength(set);\n        this.setState({dataSet: set, dataDump: dump, ...gph})\n        \n    }\n\n    // Formats player data for makeFlightData()\n    digest = (type) => {\n        const data = data_sources[type].PlayerScores\n        let formatted = [];\n        Object.keys(data).forEach((key) => {\n            formatted.push({name: key, ...data[key]})\n        })\n        return formatted\n    }\n\n    // Formats and sets as default Base Strength in the Nivo Bubblegraph\n    giveBlueBaseStrength = (type) => {\n        const data = data_sources[type];\n        const baseDict = data[\"BaseData\"][\"blueCoalition\"][\"baseData\"];\n        const formatedBaseList = [];\n        Object.keys(baseDict).forEach((key) => {\n            console.log(key);\n            let unitList = [];\n            let unorderedUnitList = baseDict[key][\"type\"]\n            Object.keys(unorderedUnitList).forEach( (key) =>{\n                unitList.push({\n                    name: key,\n                    amt: unorderedUnitList[key]\n                })\n            } )\n            \n            formatedBaseList.push({\n                name: key,\n                amt: baseDict[key][\"str\"],\n                children: unitList\n            })\n        })\n        console.log(formatedBaseList);\n        let replacement = {\n            \"name\": \"xsaf\",\n                \"children\": formatedBaseList\n                }\n        return({\n                chartMotionDamp: 2,\n                mainDataChart: replacement, \n                chartCircleColorBy: \"name\", \n                chartCircleLines: true, \n                chartCircleColors: colorSchemes[\"blue\"]\n            })\n    }\n\n    baseStrengthHandler = () => {\n        const gph = this.giveBlueBaseStrength(this.state.dataSet);\n        this.setState({...gph})\n    }\n\n    giveBaseFuel = (type) => {\n        const data = data_sources[type]\n        const baseDict = data[\"BaseData\"][\"blueCoalition\"][\"baseData\"]\n        let replacement = {\n            name: \"xsaf\", \n            children: []\n        };\n        Object.keys(baseDict).forEach((key) => {\n            console.log(key);\n            console.log(baseDict[key].bFuel.amount);\n            replacement[\"children\"].push( \n                {\n                    name: key,\n                    amt:  baseDict[key].bFuel.amount,\n                }\n            )\n        });\n        return({\n            chartMotionDamp: 30,\n            mainDataChart: replacement, \n            chartCircleColorBy: \"name\", \n            chartCircleLines: false,\n            charCircleColors: colorSchemes[\"fuel\"]\n        })\n    }\n    baseFuelHandler = () => {\n        const gph = this.giveBaseFuel(this.state.dataSet);\n        this.setState({...gph})\n    }\n\n    orderByKills = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"Air Kills\"] - a[\"Air Kills\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    orderByKDR = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"KtoDr\"] - a[\"KtoDr\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    orderByDeaths = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"Deaths\"] - a[\"Deaths\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    orderByTime = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"f_time_s\"] - a[\"f_time_s\"]\n        })\n        this.setState({dataDump: temp})\n    }\n    \n    render() {\n        return (\n            <main className=\"content\">\n                <TitleBar \n                    dataSet={this.state.dataSet}\n                />\n                <div className=\"custom-container opac-window\">\n                    <Row>\n                        <Col md=\"6\">\n                            <div className=\"title col-title opac-window-text\">\n                                <h3>Airfield Data</h3>\n                            </div>\n                            <div className=\"btn-mygroup\">\n                                <button className=\"my-btn btn btn-info\" onClick={this.baseStrengthHandler}>Blue Strength</button>\n                                <button className=\"my-btn btn btn-info\" onClick={this.baseFuelHandler}>Blue Fuel</button>\n                            </div>\n                            <Container className=\"first\">\n                                <MyResponsiveBubble\n                                    data={this.state.mainDataChart}\n                                    chartCircleColors={this.state.chartCircleColors}\n                                    chartCircleColorBy={this.state.chartCircleColorBy}\n                                    chartCircleLines={this.state.chartCircleLines}\n                                />\n                            </Container>\n                        </Col>\n                        <Col md=\"6\">\n                            <div className=\"title col-title opac-window-text\">\n                                <h3>Player Data</h3>\n                            </div>\n                            <div className=\"btn-mygroup\">\n                                <button className=\"my-btn btn btn-primary\" onClick={() => this.orderByKDR()}>Kill/Death</button>\n                                <button className=\"my-btn btn btn-success\" onClick={() => this.orderByKills()}>Kills</button>\n                                <button className=\"my-btn btn btn-danger\" onClick={() => this.orderByDeaths()}>Deaths</button>\n                                <button className=\"my-btn btn btn-info\" onClick={() => this.orderByTime()}>Time</button>\n                                <button class=\"my-btn btn btn-secondary\" onClick={() => this.toggle()}>Search</button>\n                            </div>\n                            <div className=\"nexttest player-data scroll-test\">\n                                <FlightData dataDump={this.state.dataDump} />\n                            </div>\n                        </Col>\n                    </Row>\n                    \n                    {this.state.modal ? (\n                        <PlayerSearchModal\n                            searchList={this.state.dataDump}\n                            toggle={this.toggle}\n                            onSave={this.handleSubmit}\n                            />\n                        ) : null}\n                </div>\n            </main>\n        )\n    }\n}\n\nexport default withRouter(MainDisplay);","import { Switch, Route } from 'react-router-dom';\n\nimport MainDisplay from './containers/maindisplay/MainDisplay';\n\nconst app = (props) => {\n    return (    \n        <Switch>\n            {/**Need to find way of triggering renders without \"key\",\n             *  Nested routes in MainDisplay?  */}\n            <Route path={\"/alpha\"} render={() => (<MainDisplay key=\"a\" />)} />\n            <Route path={\"/sierra\"} render={() => (<MainDisplay key=\"s\" />)} />\n            <Route path={\"/papa\"} render={() => (<MainDisplay key=\"p\" />)} />\n            <Route path={\"/\"} exact render={() => (<MainDisplay key=\"s\" />)} />\n         </Switch>           \n    )\n}\n\nexport default app","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport App from './app.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//\n//                       _oo0oo_\n//                      o8888888o\n//                      88\" . \"88\n//                      (| -_- |)\n//                      0\\  =  /0\n//                    ___/`---'\\___\n//                  .' \\\\|     |// '.\n//                 / \\\\|||  :  |||// \\\n//                / _||||| -:- |||||- \\\n//               |   | \\\\\\  -  /// |   |\n//               | \\_|  ''\\---/''  |_/ |\n//               \\  .-\\__  '-'  ___/-. /\n//             ___'. .'  /--.--\\  `. .'___\n//          .\"\" '<  `.___\\_<|>_/___.' >' \"\".\n//         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n//         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\n//     =====`-.____`.___ \\_____/___.-`___.-'=====\n//                       `=---='\n//\n//\n//     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n//                  ????         ????\n//"],"sourceRoot":""}
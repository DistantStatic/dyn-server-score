{"version":3,"sources":["searchModal.js","app.js","index.js"],"names":["PlayerSearchModal","props","handleChange","e","value","target","setState","searchTerm","searchThings","a","result","state","search","console","log","resultList","renderList","handleResults","playerSelect","id","test","valueOf","className","Object","keys","activeElement","length","classList","remove","activePlayer","response","flag","temp","Array","isArray","push","map","key","entry","onClick","isEmpty","obj","makePlayerArea","pname","pdict","searchList","JsSearch","addIndex","addDocuments","toggle","this","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","type","autoComplete","name","onKeyUp","placeholder","ModalFooter","Component","dynadata","colorSchemes","App","modal","componentDidMount","Papa_Dump","PlayerScores","digest","giveBlueBaseStrength","d","formatted","forEach","dataDump","data","baseDict","formatedBaseList","unitList","unorderedUnitList","amt","children","replacement","chartMotionDamp","mainDataChart","chartCircleColorBy","chartCircleLines","charCircleColors","giveBaseFuel","color","count","BaseCount","orderByKills","sort","b","orderByKDR","orderByDeaths","orderByTime","makeFlightData","ret","index","Card","CardBody","MyResponsiveBubbleHtml","root","margin","top","right","bottom","left","identity","colors","scheme","colorBy","padding","labelTextColor","from","modifiers","borderWidth","borderColor","defs","background","rotation","lineWidth","spacing","fill","match","depth","animate","motionStiffness","motionDamping","pageTitleBar","render","class","onSave","handleSubmit","searchModal","playerDump","fuelDataJSON","baseCount","nivoFuel","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6df695e3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label\n} from \"reactstrap\";\nimport * as JsSearch from 'js-search';\n\nexport default class PlayerSearchModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n        searchList: this.props.searchList,\n        searchTerm: \"\",\n        resultList: [],\n        renderList: [],\n        search: new JsSearch.Search('name'),\n        activePlayer: {},\n        activeElement: {},\n        };\n        this.state.search.addIndex(\"name\")\n        this.state.search.addDocuments(this.state.searchList)\n    }\n\n    handleChange = (e) => {\n        let { value } = e.target;\n        this.setState({searchTerm: value});\n        this.searchThings(value)\n    };\n\n    searchThings = (a) => {\n        let result = this.state.search.search(a)\n        console.log(result);\n        this.setState({resultList: result, renderList: this.handleResults(result)})\n    }\n\n    playerSelect = (e) => {\n        console.log(e.target.id)\n        let test = e.target.id.valueOf()\n        e.target.className = (\"selected \" + e.target.className );\n        if (Object.keys(this.state.activeElement).length > 0) {\n            this.state.activeElement.classList.remove(\"selected\");\n        }\n        this.setState({activePlayer: this.state.resultList[test], activeElement: e.target})\n    }\n\n    handleResults = (response) => {\n        let flag = typeof(response)\n        let temp = [];\n        if (flag === \"object\"){\n            if (Array.isArray(flag)){\n                console.log(\"ARRAY???\")\n            } else {\n                console.log(\"dict\")\n                temp.push(\n                    <div className=\"modal-results-list\">\n                        {\n                            Object.keys(response).map((key, entry) => {\n                                return (\n                                    <p id={\"\" + key} onClick={(e) => this.playerSelect(e)} className=\"my-centered-text search-results-item\">{response[entry][\"name\"]}</p>\n                                )\n                            })\n                        }\n                    </div>\n                )\n            }\n        }\n        return temp\n    }\n\n    isEmpty = (obj) => {\n        if (typeof obj === \"undefined\"){\n            return true\n        }\n        return Object.keys(obj).length === 0;\n    }\n\n    makePlayerArea = () => {\n        if (!this.isEmpty(this.state.activePlayer)){\n            let pname = this.state.activePlayer[\"name\"]\n            let pdict = this.state.activePlayer\n            return (\n                <div className=\"selected-player-area\">\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h3 className=\"card-title\">{pname}</h3>\n                            <h5 className=\"card-sub-title mb-2 text-muted\">Flight Time: {pdict[\"SeatTime\"]}</h5>\n                            <div className=\"card-section\">\n                                <div className=\"row row-cols-3\">\n                                    <div className=\"col stat\">\n                                        <span><b>Air Kills: </b>{pdict[\"Air Kills\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">\n                                        <span><b>Deaths: </b>{pdict[\"Deaths\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">   \n                                        <span><b>Kill/Death Ratio: </b>{pdict[\"KtoDr\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">\n                                        <span><b>Ground Kills: </b>{pdict[\"Unit Kills\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">  \n                                        <span><b>Building Kills: </b>{pdict[\"Building Kills\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">  \n                                        <span><b>Ejections: </b>{pdict[\"Ejections\"]}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n    }\n\n    render() {\n        const { toggle } = this.props;\n        return (\n        <Modal isOpen={true} toggle={toggle} className=\"modal-player-window\">\n            <ModalHeader toggle={toggle}> Player Search </ModalHeader>\n            <ModalBody className=\"modal-search-body\">\n                <Form>\n                    <FormGroup>\n                        <Label for=\"search-bar\">Search: </Label>\n                        <Input\n                            type=\"text\"\n                            autoComplete=\"off\"\n                            name=\"search-bar\"\n                            onKeyUp={this.handleChange}\n                            placeholder=\"Enter Player Name\"\n                        />\n                    </FormGroup>\n                </Form>\n            <div>{this.state.renderList}</div>\n            </ModalBody>\n            <ModalFooter>\n                {this.makePlayerArea()}\n            </ModalFooter>\n        </Modal>\n        );\n    }\n}","import React, { Component } from \"react\";\nimport {\n    Card,\n    CardBody,\n} from \"reactstrap\";\nimport { ResponsiveBubble } from '@nivo/circle-packing'\nimport PlayerSearchModal from \"./searchModal\"\nimport Papa_Dump from './NewData.json'\n\n// Temp fuel data\nconst dynadata = { \"Al Qusayr\" :{\"amt\":67.304099121099,\"co\":0,\"fc\":\"000000006E24ED00\",\"id\":2,\"v\":false}, \"Aleppo\" :{\"amt\":513.549,\"co\":0,\"fc\":\"0000000DF582FF50\",\"id\":23,\"v\":false},\"Bassel Al-Assad\":{\"amt\":786.18481982422,\"co\":0,\"fc\":\"0000000DF5812270\",\"id\":17,\"v\":false},\"Hama\":{\"amt\":765.55572253418,\"co\":0,\"fc\":\"000000006E273010\",\"id\":10,\"v\":false},\"Hatay\":{\"amt\":72.886288574219,\"co\":0,\"fc\":\"000000006E2663B0\",\"id\":11,\"v\":false},\"Incirlik\":{\"amt\":569.508,\"co\":0,\"fc\":\"000000006E2685C0\",\"id\":12,\"v\":false},\"Jirah\":{\"amt\":100,\"co\":0,\"fc\":\"0000000DF58188A0\",\"id\":13,\"v\":false},\"Minakh\":{\"amt\":25,\"co\":0,\"fc\":\"0000000DF5836580\",\"id\":22,\"v\":false}}\n\n// Color schemes for graph\nconst colorSchemes = {\n    \"blue\": \"blues\",\n    \"red\": \"reds\",\n    \"fuel\": \"blues\"\n}\n\nclass App extends Component {\n    \n    constructor(props) {\n        super(props)\n        this.state = {\n            searchModal: false,\n            playerDump: {},\n            dataDump: [], //players\n            fuelDataJSON: {},\n            mainDataChart: [],\n            chartCircleColorBy: \"depth\", //depth or name\n            chartCircleLines: true,\n            charCircleColors: colorSchemes[\"blue\"],\n            chartMotionDamp: 2,\n            baseCount: 0,\n            nivoFuel: {\n                \"name\": \"xsaf\",\n                \"color\": \"hsl(27, 70%, 50%)\",\n                \"children\": \n                    [ \n                        /* Populate dynamic with data */\n                    ]\n                }\n        }\n    }\n\n    // Toggles the player search modal\n    toggle = () => {\n        this.setState({ modal: !this.state.modal });\n    }\n      \n    componentDidMount = () => {\n        console.log(Papa_Dump.PlayerScores);\n        this.digest(Papa_Dump.PlayerScores);\n        this.giveBlueBaseStrength(Papa_Dump)\n    }\n\n    // Formats player data for makeFlightData()\n    digest = (d) => {\n        let formatted = [];\n        Object.keys(d).forEach((key) => {\n            formatted.push({name: key, ...d[key]})\n        })\n        this.setState({dataDump: formatted});\n    }\n\n    // Formats and sets as default Base Strength in the Nivo Bubblegraph\n    giveBlueBaseStrength = (data) => {\n        let baseDict = data[\"BaseData\"][\"blueCoalition\"][\"baseData\"]\n        let formatedBaseList = [];\n        Object.keys(baseDict).forEach((key) => {\n            console.log(key);\n            let unitList = [];\n            let unorderedUnitList = baseDict[key][\"type\"]\n            Object.keys(unorderedUnitList).forEach( (key) =>{\n                unitList.push({\n                    name: key,\n                    amt: unorderedUnitList[key]\n                })\n            } )\n            \n            formatedBaseList.push({\n                name: key,\n                amt: baseDict[key][\"str\"],\n                children: unitList\n            })\n        })\n        console.log(formatedBaseList);\n        let replacement = {\n            \"name\": \"xsaf\",\n                \"color\": \"hsl(27, 70%, 50%)\",\n                \"children\": formatedBaseList\n                }\n        this.setState({\n                chartMotionDamp: 2,\n                mainDataChart: replacement, \n                chartCircleColorBy: \"name\", \n                chartCircleLines: true, \n                charCircleColors: colorSchemes[\"blue\"]\n            })\n    }\n\n    giveBaseFuel = () => {\n        let replacement = {\n            name: \"xsaf\", \n            color:\"hsl(27, 70%, 50%)\", \n            children: []\n        };\n        let count = 0;\n        Object.keys(dynadata).forEach((key) => {\n            replacement[\"children\"].push( \n                {\n                    name: key,\n                    color: \"hsl(84, 70%, 50%)\",\n                    amt:  dynadata[key].amt,\n                }\n            )\n            count += 1;\n        });\n        this.setState({\n            BaseCount: count,\n            chartMotionDamp: 30,\n            mainDataChart: replacement, \n            chartCircleColorBy: \"name\", \n            chartCircleLines: false,\n            charCircleColors: colorSchemes[\"fuel\"]\n        })\n    }\n\n    orderByKills = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"Air Kills\"] - a[\"Air Kills\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    orderByKDR = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"KtoDr\"] - a[\"KtoDr\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    orderByDeaths = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"Deaths\"] - a[\"Deaths\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    orderByTime = () => {\n        let temp = this.state.dataDump\n        temp.sort((a, b) => {\n            return b[\"f_time_s\"] - a[\"f_time_s\"]\n        })\n        this.setState({dataDump: temp})\n    }\n\n    // Creates Player Data Cards\n    makeFlightData = () => {\n        let pname = \"\"\n        let pdict = {}\n        let ret = [];\n        this.state.dataDump.forEach((entry, index) => {\n            if (entry[\"f_time_s\"] > 7000){\n                pname = entry[\"name\"];\n                pdict = entry;  \n                ret.push(\n                    <Card>\n                        <CardBody>\n                            <h3 className=\"card-title\">{pname}</h3>\n                            <h5 className=\"card-sub-title mb-2 text-muted\">Flight Time: {pdict[\"SeatTime\"]}</h5>\n                            <div className=\"card-section\">\n                                <div className=\"row row-cols-3\">\n                                    <div className=\"col stat\">\n                                        <span><b>Air Kills: </b>{pdict[\"Air Kills\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">\n                                        <span><b>Deaths: </b>{pdict[\"Deaths\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">   \n                                        <span><b>Kill/Death Ratio: </b>{pdict[\"KtoDr\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">\n                                        <span><b>Ground Kills: </b>{pdict[\"Unit Kills\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">  \n                                        <span><b>Building Kills: </b>{pdict[\"Building Kills\"]}</span>\n                                    </div>\n                                    <div className=\"col stat\">  \n                                        <span><b>Ejections: </b>{pdict[\"Ejections\"]}</span>\n                                    </div>\n                                </div>\n                            </div>\n                        </CardBody>\n                    </Card>\n                )\n            }    \n        })\n        return ret\n    }\n\n    // Nivo Bubble Graph to show Base Strength and Fuel\n    MyResponsiveBubbleHtml = (d) => (\n        <ResponsiveBubble\n            root={d}\n            margin={{ top: 20, right: 20, bottom: 20, left: 20 }}\n            identity=\"name\"\n            value=\"amt\"\n            colors={{ scheme: this.state.charCircleColors }}\n            colorBy={this.state.chartCircleColorBy}\n            padding={6}\n            labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1 ] ] }}\n            borderWidth={2}\n            borderColor={{ from: 'color' }}\n            defs={[\n                {\n                    id: 'lines',\n                    type: 'patternDots',\n                    background: 'none',\n                    color: 'inherit',\n                    rotation: -45,\n                    lineWidth: 5,\n                    spacing: 8\n                }\n            ]}\n            fill={ this.state.chartCircleLines ? [ { match: { depth: 1 }, id: 'lines' } ] : []}\n            animate={true}\n            motionStiffness={80}\n            motionDamping={12}\n        />\n    )\n\n    // Title Bar\n    pageTitleBar = () => {\n        return (\n            <div className=\"title-group\">\n                <div className=\"title site-title\">\n                    <h1>[XSAF] Camelot Dynamic Server</h1>\n                </div>\n                <div className=\"title site-title\">\n                    <h1>Server Data</h1>\n                </div>\n            </div>\n        )\n    }\n\n    render = () => {\n        return (\n            <main className=\"content\">\n                {this.pageTitleBar()}\n                <div className=\"custom-container opac-window\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"title col-title opac-window-text\">\n                                <h3>Airfield Data</h3>\n                            </div>\n                            <div className=\"btn-mygroup\">\n                                <button className=\"my-btn btn btn-info\" onClick={() => this.giveBlueBaseStrength(Papa_Dump)}>Blue Strength</button>\n                                <button className=\"my-btn btn btn-info\" onClick={() => this.giveBaseFuel()}>Blue Fuel</button>\n                            </div>\n                            <div className=\"first\">\n                                {this.MyResponsiveBubbleHtml(this.state.mainDataChart)}\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <div className=\"title col-title opac-window-text\">\n                                <h3>Player Data</h3>\n                            </div>\n                            <div className=\"btn-mygroup\">\n                                <button className=\"my-btn btn btn-primary\" onClick={() => this.digest(Papa_Dump.PlayerScores)}>Refresh Data</button>\n                                <button className=\"my-btn btn btn-info\" onClick={() => this.orderByKDR()}>Kill/Death</button>\n                                <button className=\"my-btn btn btn-success\" onClick={() => this.orderByKills()}>Kills</button>\n                                <button className=\"my-btn btn btn-danger\" onClick={() => this.orderByDeaths()}>Deaths</button>\n                                <button className=\"my-btn btn btn-info\" onClick={() => this.orderByTime()}>Time</button>\n                                <button class=\"my-btn btn btn-secondary\" onClick={() => this.toggle()}>Search</button>\n                            </div>\n                            <div className=\"nexttest player-data scroll-test\">\n                                {this.makeFlightData()}\n                            </div>\n                        </div>\n                    </div>\n                    \n                    {this.state.modal ? (\n                        <PlayerSearchModal\n                            searchList={this.state.dataDump}\n                            toggle={this.toggle}\n                            onSave={this.handleSubmit}\n                            />\n                        ) : null}\n                </div>\n            </main>\n        )\n    }\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; \nimport App from './app.js';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n//\n//                       _oo0oo_\n//                      o8888888o\n//                      88\" . \"88\n//                      (| -_- |)\n//                      0\\  =  /0\n//                    ___/`---'\\___\n//                  .' \\\\|     |// '.\n//                 / \\\\|||  :  |||// \\\n//                / _||||| -:- |||||- \\\n//               |   | \\\\\\  -  /// |   |\n//               | \\_|  ''\\---/''  |_/ |\n//               \\  .-\\__  '-'  ___/-. /\n//             ___'. .'  /--.--\\  `. .'___\n//          .\"\" '<  `.___\\_<|>_/___.' >' \"\".\n//         | | :  `- \\`.;`\\ _ /`;.`/ - ` : | |\n//         \\  \\ `_.   \\_ __\\ /__ _/   .-` /  /\n//     =====`-.____`.___ \\_____/___.-`___.-'=====\n//                       `=---='\n//\n//\n//     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n//\n//                  ????         ????\n//"],"sourceRoot":""}